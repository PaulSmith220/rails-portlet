<h1>Guide</h1>

<h2>Overview</h2>

<%= image_tag 'overview.png', :alt => 'Technical overview', :style => 'float: right; width: 40%; padding: 20px;' -%>

<p>
You're interested in developing portlets for JSR286 containers, aye? Ok, Rails-portlet does not require you to use Rails nor Liferay, but it has some specific fine-tunes for their co-operation. In theory using any remote server that speaks HTTP is ok, but be aware that so far Rails on nginx/Mongrel cluster and JRuby deployment on Liferay have been used.
</p>
<p>
Some theory: the portlet Java code is configured with an url and cookies to send a HTTP request to a remote server (Rails). The remote server response is processed to portlet response. Nothing restricts you to run Rails. User ID is passed from REMOTE_USER in a cookie, so if the portlet container supports it, you can read the UID from headers of the request to the web app server. Database integration is optional, for which you need the <em><a href="http://lportal.rubyforge.org/">lportal</a></em> gem, but so far it only works properly with PostgreSQL.
</p>

<p>
The portlet is aware of the context it is deployed in. It can detect the UID of the logged in user and the GID or the group the portlet is deployed in. These values are passed on to the remote server in cookies. If you let Caterpillar handle this, @uid will automagically be set in Rails controller actions.</p>

<p>
Sessions are also supported since version 0.9; cookies set by the remote server are stored to portlet session and sent back in each request. 
</p>

<p>
It is possible to build portlet applications using WEBrick and MRI Ruby with standard Rails package and development practises. 
</p>

<h2>Enough with theory, show me the code</h2>

<p>
The fastest way to start requires you to have a running Liferay server (5.1 or later), Rails gems (2.1 or later) and Subversion client. You're also recommended to have a Linux, OSX or other *nix server.
</p>

<p>
Checkout the example application from the SVN trunk:
<p class="code">
  svn co svn://rubyforge.org/var/svn/rails-portlet/example
</p>

Start up the WEBrick server and navigate to
<a href="http://localhost:3000/caterpillar/test_bench">
http://localhost:3000/caterpillar/test_bench
</a>
<p class="code">
  cd example<br />
  ./script/server
</p>




</p>





