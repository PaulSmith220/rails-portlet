<%= image_tag 'overview.png', :alt => 'Technical overview', :style => 'float: right; width: 40%; padding: 20px;' -%>

<h1>Features</h1>
<p>
The project hosts three submodules â€“ <a href="http://github.com/lamikae/html2jsr286">html2jsr286</a>, <a href="http://github.com/lamikae/caterpillar">caterpillar</a> and <a href="http://github.com/lamikae/lportal">lportal</a>. <b>Caterpillar contains the portlet JAR</b>, so you only need the Caterpillar gem unless you are an experimentalist. It contains a set of rake tasks and helper libraries for Rails applications serving Liferay portlets. It is the only package you'll need to install to build Rails portlets for the portlet container. 
</p>

<h2>Session management and security</h2>
<p>
User ID is passed from RenderRequest's REMOTE_USER to the remote server in a cookie. The remote application is authenticated transparently. Also any cookies set by the remote server are automatically added to succeeding requests, so it is possible to use Rails' <em>session[]</em> feature.
</p>
<p>
Liferay can also detect the context the portlet is deployed in. The group ID can be passed to the remote server in requst parameters.
</p>

<p>
The mechanism to prevent request spoofing with a forged UID is based on a shared secret, that is given to the portlet at instantiation, inserted into a <em>special cookie</em>, and the value checked at the remote server. Caterpillar provides handy helpers:

<p class="code">
class ApplicationController<br />
&nbsp; &nbsp; # Import security filters<br />
&nbsp; &nbsp; include Caterpillar::Security<br />
&nbsp; &nbsp; secure_portlet_sessions<br />
<br />

&nbsp; &nbsp;  # get @uid from cookie<br />
&nbsp; &nbsp;  before_filter [:authorize_agent, :authorize_request], :only =&gt; :get_liferay_uid<br />
&nbsp; &nbsp;  before_filter :get_liferay_uid
</p>

After inserting this to your ApplicationController, you will have Liferay UID in <em><span style="color: green;">@uid</span></em> at use in all actions. <!-- undocumented The <em>authorize</em> filter is documented in Caterpillar::Security. -->
</p>

<h2>Database integration</h2>
<p>
Database integration is optional, for which you need the <em><a href="http://lportal.rubyforge.org/">lportal</a></em> gem, but so far it only works properly with PostgreSQL.
</p>

<!-- ask the author
<h2>EJB integration</h2>
<p>
Provided by ActiveEJB.
</p>
-->

